services:
  db:
    image: postgres:16.2-alpine3.19
    container_name: vs_db
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      retries: 3
    volumes:
      - ./schema:/docker-entrypoint-initdb.d
      - postgres:/var/lib/postgresql/data
    networks:
      - virtualstore
  user:
    container_name: user
    build:
      context: .
      dockerfile: dockerfile
      args:
        BUILD_PATH: user
    ports:
        - 3000:3000
    restart: always
    environment:
      CONNECTION_STRING: "postgresql://postgres:postgres@db:5432/postgres?sslmode=disable"
      HTTP_SERVER_PORT: "3000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - virtualstore
  order:
    container_name: order
    build:
      context: .
      dockerfile: dockerfile
      args:
        BUILD_PATH: order
    ports:
      - 3001:3000
    restart: always
    environment:
      CONNECTION_STRING: "postgresql://postgres:postgres@db:5432/postgres?sslmode=disable"
      HTTP_SERVER_PORT: "3000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - virtualstore
  product:
    container_name: product
    build:
      context: .
      dockerfile: dockerfile
      args:
        BUILD_PATH: product
    ports:
      - 3002:3000
    restart: always
    environment:
      CONNECTION_STRING: "postgresql://postgres:postgres@db:5432/postgres?sslmode=disable"
      HTTP_SERVER_PORT: "3000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - virtualstore

networks:
  virtualstore:
    driver: bridge

volumes:
  postgres:
